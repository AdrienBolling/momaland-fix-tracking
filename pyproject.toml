[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "momadm-benchmarks"
description="A standard API for Multi-Objective Multi-Agent Decision making and a diverse set of reference environments."
readme = "README.md"
requires-python = ">= 3.8"
authors = [
    "Roxana Radulescu <roxana.radulescu@vub.be>",
    "Willem RÃ¶pke <willem.ropke@vub.be>",
    "Patrick Mannion <patrick.mannion@universityofgalway.ie>",
    "Diederik M. Roijers <diederik.roijers@vub.be>",
    "Lucas N. Alegre <lnalegre@inf.ufrgs.br>",
    "Florian Felten <florian.felten@uni.lu"
]
license = { text = "GNU General Public License v3.0" }
keywords = ["Reinforcement Learning", "Multi-Objective", "Multi-Agent", "RL", "AI", "gymnasium", "pettingzoo"]
classifiers = [
    "Development Status :: 4 - Beta",  # change to `5 - Production/Stable` when ready
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
]
dependencies = [
    "gymnasium >=0.28",
    "pettingzoo >=1.23.1",
    "numpy >=1.21.0",
]
dynamic = ["version"]

[project.optional-dependencies]
# Update dependencies in `all` if any are added or removed
all = [
    # All dependencies above except accept-rom-license
    # NOTE: No need to manually remove the duplicates, setuptools automatically does that
]
testing = ["pytest ==7.1.3"]

[project.urls]
Homepage = ""
Repository = ""
Documentation = ""
"Bug Report" = ""

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["mo_gymnasium", "mo_gymnasium.*"]

[tool.setuptools.package-data]
mo_gymnasium = [
    "**/*.json",
    "**/assets/*",
]

# Linters and Test tools #######################################################

[tool.black]
safe = true
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
atomic = true
profile = "black"
src_paths = ["momadm_benchmarks", "tests", "docs/scripts"]
extra_standard_library = ["typing_extensions"]
indent = 4
lines_after_imports = 2
multi_line_output = 3

[tool.pyright]
include = ["momadm_benchmarks/**", "tests/**"]
exclude = ["**/node_modules", "**/__pycache__"]
strict = []

typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises warnings
# reportUnknownParameterType = "warning"  # -> raises warnings
# reportUnknownVariableType = "warning"  # -> raises warnings
# reportUnknownArgumentType = "warning"  # -> raises warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportOptionalMemberAccess = "none" # -> commented out raises warnings
reportPrivateImportUsage = "warning" # -> this raises warnings because we use not exported modules from gym (wrappers)

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
filterwarnings = ['ignore:.*The environment .* is out of date.*']
# filterwarnings = ['ignore:.*step API.*:DeprecationWarning']
